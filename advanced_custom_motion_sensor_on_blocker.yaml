blueprint:
  name: Advanced Custom Motion Sensor (ON/OFF Blocker)
  description: >
    Modified version of advanced motion sensor. Blocks motion ON and OFF using input_boolean.
    ON and OFF are both blocked if the input_boolean is ON.
  domain: automation
  input:
    motion_entity:
      name: Motion Sensor
      selector:
        entity:
          domain: binary_sensor
          device_class: motion
    light_target:
      name: Light or Switch
      selector:
        target:
          entity:
            domain:
              - light
              - switch
    luminance_sensor:
      name: Illuminance Sensor
      default:
      selector:
        entity:
          domain: sensor
          device_class: illuminance
    luminance_required:
      name: Required Lux Level
      default: 100
      selector:
        number:
          min: 0
          max: 1000
          unit_of_measurement: lx
    no_motion_wait:
      name: Wait Time (s)
      default: 120
      selector:
        number:
          min: 0
          max: 600
          unit_of_measurement: seconds
          step: 1
    time_default_start:
      name: Active Time Start
      default: "00:00:01"
      selector:
        time: {}
    time_default_end:
      name: Active Time End
      default: "00:00:00"
      selector:
        time: {}
    elevation:
      name: Sun Elevation Check
      default: Always
      selector:
        select:
          options:
            - Always
            - Below horizon
            - Above horizon
    elevation_adjustment:
      name: Sun Elevation Adjustment
      default: 0
      selector:
        number:
          min: -90
          max: 90
          unit_of_measurement: degrees
    automation_blocker:
      name: Blocker for both ON and OFF
      default:
      selector:
        entity: {}
    automation_blocker_boolean:
      name: Block when boolean is ON (true) or OFF (false)?
      default: false
      selector:
        boolean: {}
    scene_ambient:
      name: Ambient Scene (Optional)
      default: scene.none
      selector:
        entity:
          domain: scene
    time_scene_ambient_start:
      name: Ambient Start Time
      default: "00:00:00"
      selector:
        time: {}
    time_scene_ambient_end:
      name: Ambient End Time
      default: "00:00:00"
      selector:
        time: {}
mode: restart
max_exceeded: silent
variables:
  scene_ambient: !input scene_ambient
  automation_blocker: !input automation_blocker
  automation_blocker_boolean: !input automation_blocker_boolean
  elevation: !input elevation
  elevation_adjustment: !input elevation_adjustment
  motion_entity: !input motion_entity
  luminance_sensor: !input luminance_sensor
  luminance_required: !input luminance_required
trigger:
  - platform: state
    entity_id: !input motion_entity
    from: "off"
    to: "on"
  - platform: state
    entity_id: !input motion_entity
    from: "on"
    to: "off"
    for: !input no_motion_wait
action:
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ trigger.to_state.state == 'on' }}"
          ...
        sequence:
          - service: light.turn_on
            target: !input light_target
      - conditions:
          - condition: template
            value_template: "{{ trigger.to_state.state == 'off' }}"
          ...
        sequence:
          - choose:
              - conditions:
                  - "{{ scene_ambient != 'scene.none' }}"
                  - condition: time
                    after: !input time_scene_ambient_start
                    before: !input time_scene_ambient_end
                sequence:
                  - scene: !input scene_ambient
            default:
              - service: light.turn_off
                target: !input light_target
  default: []
